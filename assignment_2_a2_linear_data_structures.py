# -*- coding: utf-8 -*-
"""Assignment 2: A2 Linear data structures

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bz5MMYQl-p4BiJX30idc4Kqo1xlOpAwX
"""

class Patient:
    def __init__(self, patient_id, name, age, medical_condition):
        self.patient_id = patient_id
        self.name = name
        self.age = age
        self.medical_condition = medical_condition
        self.appointments = []
        self.prescriptions = []

    def add_appointment(self, appointment):
        self.appointments.append(appointment)

    def add_prescription(self, prescription):
        self.prescriptions.append(prescription)

class Prescription:
    def __init__(self, medicine, dosage, duration):
        self.medicine = medicine
        self.dosage = dosage
        self.duration = duration

class Appointment:
    def __init__(self, doctor_name, appointment_date):
        self.doctor_name = doctor_name
        self.appointment_date = appointment_date

class PatientManagementSystem:
    def __init__(self):
        self.patients = {}
        self.consultation_queue = []

    def add_patient(self, patient):
        if patient.patient_id in self.patients:
            print(f"Patient with ID {patient.patient_id} already exists.")
        else:
            self.patients[patient.patient_id] = patient
            print(f"Patient {patient.name} added successfully.")

    def update_patient(self, patient_id, **updates):
        patient = self.patients.get(patient_id)
        if patient:
            patient.__dict__.update(updates)
            print(f"Patient {patient_id} updated successfully.")
        else:
            print(f"Patient with ID {patient_id} not found.")

    def remove_patient(self, patient_id):
        if patient_id in self.patients:
            del self.patients[patient_id]
            print(f"Patient {patient_id} removed successfully.")
        else:
            print(f"Patient with ID {patient_id} not found.")

    def add_to_consultation_queue(self, patient_id):
        if patient_id in self.patients and patient_id not in self.consultation_queue:
            self.consultation_queue.append(patient_id)
            print(f"Patient {patient_id} added to the consultation queue.")
        else:
            print(f"Patient with ID {patient_id} not found or already in queue.")

    def consult_next_patient(self):
        if self.consultation_queue:
            patient_id = self.consultation_queue.pop(0)
            print(f"Consulting patient {patient_id}.")
            return self.patients[patient_id]
        else:
            print("The consultation queue is empty.")
            return None

def add_patient_ui(system):
    print("\n--- Add New Patient ---")
    patient_id = input("Enter patient ID: ")
    name = input("Enter patient name: ")
    age = input("Enter patient age: ")
    medical_condition = input("Enter medical condition: ")
    patient = Patient(patient_id, name, int(age), medical_condition)
    system.add_patient(patient)

def update_patient_ui(system):
    print("\n--- Update Patient Record ---")
    patient_id = input("Enter patient ID: ")
    print("Enter new details (press enter to skip):")
    name = input("New name: ") or None
    age = input("New age: ") or None
    medical_condition = input("New medical condition: ") or None
    updates = {}
    if name: updates['name'] = name
    if age: updates['age'] = age
    if medical_condition: updates['medical_condition'] = medical_condition
    system.update_patient(patient_id, **updates)

def remove_patient_ui(system):
    print("\n--- Remove Patient ---")
    patient_id = input("Enter patient ID: ")
    system.remove_patient(patient_id)

def add_to_queue_ui(system):
    print("\n--- Add Patient to Consultation Queue ---")
    patient_id = input("Enter patient ID: ")
    system.add_to_consultation_queue(patient_id)

def consult_next_patient_ui(system):
    print("\n--- Consult Next Patient ---")
    system.consult_next_patient()

def main_menu():
    system = PatientManagementSystem()
    while True:
        print("\n--- Hospital Patient Management System ---")
        print("1. Add Patient")
        print("2. Update Patient Record")
        print("3. Remove Patient")
        print("4. Add Patient to Consultation Queue")
        print("5. Consult Next Patient")
        print("6. Exit")
        choice = input("Enter your choice: ")

        if choice == '1':
            add_patient_ui(system)
        elif choice == '2':
            update_patient_ui(system)
        elif choice == '3':
            remove_patient_ui(system)
        elif choice == '4':
            add_to_queue_ui(system)
        elif choice == '5':
            consult_next_patient_ui(system)
        elif choice == '6':
            print("Exiting system.")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main_menu()